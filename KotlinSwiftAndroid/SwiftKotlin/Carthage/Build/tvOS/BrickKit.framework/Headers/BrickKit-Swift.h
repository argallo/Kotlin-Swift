// Generated by Apple Swift version 4.0.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("BrickKit")
@class UICollectionViewLayoutAttributes;
@class NSCoder;

SWIFT_CLASS("_TtC8BrickKit13BaseBrickCell")
@interface BaseBrickCell : UICollectionViewCell
- (void)applyLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class NSLayoutConstraint;

SWIFT_CLASS("_TtC8BrickKit9BrickCell")
@interface BrickCell : BaseBrickCell
@property (nonatomic) BOOL allowsFocus;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Nullable topSpaceConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Nullable bottomSpaceConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Nullable leftSpaceConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Nullable rightSpaceConstraint;
@property (nonatomic) UIEdgeInsets edgeInsets;
- (void)didTapCell;
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionViewLayout;

/// The BrickCollectionView class manages the views of bricks that a BrickSection represents
SWIFT_CLASS("_TtC8BrickKit19BrickCollectionView")
@interface BrickCollectionView : UICollectionView
/// Override to check if the layout is a BrickLayout
@property (nonatomic, strong) UICollectionViewLayout * _Nonnull collectionViewLayout;
@property (nonatomic) CGRect frame;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)reloadData;
- (void)performBatchUpdates:(void (^ _Nullable)(void))updates completion:(void (^ _Nullable)(BOOL))completion;
- (void)setContentOffset:(CGPoint)contentOffset animated:(BOOL)animated;
@end




@interface BrickCollectionView (SWIFT_EXTENSION(BrickKit)) <UICollectionViewDataSource>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_CLASS("_TtC8BrickKit29BrickCollectionViewDataSource")
@interface BrickCollectionViewDataSource : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// BrickFlowLayoutiis a UICollectionViewLayout that    can handle behaviors
SWIFT_CLASS("_TtC8BrickKit15BrickFlowLayout")
@interface BrickFlowLayout : UICollectionViewLayout
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class UICollectionViewUpdateItem;

@interface BrickFlowLayout (SWIFT_EXTENSION(BrickKit))
- (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> * _Nonnull)updateItems;
- (void)finalizeCollectionViewUpdates;
- (UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath SWIFT_WARN_UNUSED_RESULT;
@end



@class UICollectionViewLayoutInvalidationContext;

@interface BrickFlowLayout (SWIFT_EXTENSION(BrickKit))
- (void)prepareLayout;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
- (void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext * _Nonnull)context;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_CLASS("_TtC8BrickKit21BrickLayoutAttributes")
@interface BrickLayoutAttributes : UICollectionViewLayoutAttributes
/// zIndex
@property (nonatomic) NSInteger zIndex;
/// Copy the attributes with all custom attributes. This is needed as UICollectionView will make copies of the attributes for height calculation etc
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BrickLayoutAttributes (SWIFT_EXTENSION(BrickKit))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// A BrickBehavior can alter the way bricks are displayed and handled
/// By subclassing the Behavior, an implementation can alter the frame of the brick as well as its origin
SWIFT_CLASS("_TtC8BrickKit19BrickLayoutBehavior")
@interface BrickLayoutBehavior : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8BrickKit30BrickLayoutInvalidationContext")
@interface BrickLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface BrickLayoutInvalidationContext (SWIFT_EXTENSION(BrickKit))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC8BrickKit36BrickLayoutResizeInvalidationContext")
@interface BrickLayoutResizeInvalidationContext : UICollectionViewLayoutInvalidationContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8BrickKit16BrickSectionCell")
@interface BrickSectionCell : BaseBrickCell
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;
@class UITraitCollection;

/// A BrickViewController is a UIViewController that contains a BrickCollectionView
SWIFT_CLASS("_TtC8BrickKit19BrickViewController")
@interface BrickViewController : UIViewController <UICollectionViewDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibName bundle:(NSBundle * _Nullable)bundle OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
/// Registration/unregistration happens here because the user can disable force touch in their system settings
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end



@protocol UIViewControllerPreviewing;

@interface BrickViewController (SWIFT_EXTENSION(BrickKit)) <UIViewControllerPreviewingDelegate>
- (UIViewController * _Nullable)previewingContext:(id <UIViewControllerPreviewing> _Nonnull)previewingContext viewControllerForLocation:(CGPoint)location SWIFT_WARN_UNUSED_RESULT;
- (void)previewingContext:(id <UIViewControllerPreviewing> _Nonnull)previewingContext commitViewController:(UIViewController * _Nonnull)viewControllerToCommit;
@end


SWIFT_CLASS("_TtC8BrickKit16GenericBrickCell")
@interface GenericBrickCell : BrickCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForReuse;
- (void)awakeFromNib;
@end

@class UIButton;
@class UIImageView;

SWIFT_CLASS("_TtC8BrickKit15ButtonBrickCell")
@interface ButtonBrickCell : GenericBrickCell
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified button;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable rightImage;
- (void)prepareForReuse;
- (IBAction)didTapButton:(id _Nonnull)sender;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A CardLayoutBehavior organizes bricks on top of eachother, with the top one full height and the other ones are staggered behind
/// <ul>
///   <li>
///     see CardLayoutBehaviorDataSource: The way to determine which bricks need to show
///   </li>
/// </ul>
SWIFT_CLASS("_TtC8BrickKit18CardLayoutBehavior")
@interface CardLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8BrickKit19CollectionBrickCell")
@interface CollectionBrickCell : BrickCell
@property (nonatomic, weak) IBOutlet BrickCollectionView * _Null_unspecified brickCollectionView;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable chevronImage;
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC8BrickKit23CoverFlowLayoutBehavior")
@interface CoverFlowLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8BrickKit14ImageBrickCell")
@interface ImageBrickCell : GenericBrickCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imageView;
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class UIView;

SWIFT_CLASS("_TtC8BrickKit14LabelBrickCell")
@interface LabelBrickCell : GenericBrickCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified label;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable button;
@property (nonatomic, weak) IBOutlet UIView * _Nullable horizontalRuleLeft;
@property (nonatomic, weak) IBOutlet UIView * _Nullable horizontalRuleRight;
@property (nonatomic, weak) IBOutlet UIImageView * _Nullable imageView;
- (void)prepareForReuse;
- (IBAction)buttonTapped:(UIButton * _Nonnull)sender;
@property (nonatomic) BOOL allowsFocus;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC8BrickKit23MaxZIndexLayoutBehavior")
@interface MaxZIndexLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// A StickyLayoutBehavior will stick certain bricks (based on the dataSource) on the top of its section
SWIFT_CLASS("_TtC8BrickKit20StickyLayoutBehavior")
@interface StickyLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// Allows the brick to stick, but will shrink to a minimum height first
SWIFT_CLASS("_TtC8BrickKit27MinimumStickyLayoutBehavior")
@interface MinimumStickyLayoutBehavior : StickyLayoutBehavior
@end


SWIFT_CLASS("_TtC8BrickKit20OffsetLayoutBehavior")
@interface OffsetLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// An OnScrollDownStickyLayoutBehavior will reveal certain bricks (based on the dataSource) when scroll back down
SWIFT_CLASS("_TtC8BrickKit32OnScrollDownStickyLayoutBehavior")
@interface OnScrollDownStickyLayoutBehavior : StickyLayoutBehavior
@end


/// Allows a brick to have a different zIndex then the one assigned by the layout
SWIFT_CLASS("_TtC8BrickKit23SetZIndexLayoutBehavior")
@interface SetZIndexLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// Snaps the closest brick to a given location
SWIFT_CLASS("_TtC8BrickKit25SnapToPointLayoutBehavior")
@interface SnapToPointLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8BrickKit23SpotlightLayoutBehavior")
@interface SpotlightLayoutBehavior : BrickLayoutBehavior
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// A StickyFooterLayoutBehavior will stick certain bricks (based on the dataSource) on the bottom of its section
SWIFT_CLASS("_TtC8BrickKit26StickyFooterLayoutBehavior")
@interface StickyFooterLayoutBehavior : StickyLayoutBehavior
@end


SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
